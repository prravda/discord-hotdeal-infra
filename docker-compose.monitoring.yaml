version: "3.9"

services:
  grafana:
    image: grafana/grafana:latest
    restart: always
    hostname: "grafana"
    container_name: "grafana"
    ports:
      - "3000:3000"
    volumes:
      - ./configs/grafana-stack/grafana/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    restart: always
    container_name: "loki"
    ports:
      - "3100:3100"
    volumes:
      - loki:/loki
      - ./configs/grafana-stack/loki/loki-local-config.yaml:/etc/loki/local-config.yaml
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    restart: always
    container_name: "node-exporter"
    hostname: "node-exporter"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    restart: always
    container_name: "prometheus"
    hostname: "prometheus"
    volumes:
      - ./configs/grafana-stack/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=3d'
      - '--storage.tsdb.retention.size=512MB'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitoring

  cadvisor:
    container_name: "cadvisor"
    hostname: "cadvisor"
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"
    networks:
      - monitoring

networks:
  monitoring:
    name: monitoring
    driver: bridge

volumes:
  loki:
  grafana:
  prometheus:
    name: prometheus
